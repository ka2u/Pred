.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mojo 3"
.TH Mojo 3 "2010-01-19" "perl v5.8.8" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mojo \- The Web In A Box!
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use base \*(AqMojo\*(Aq;
\&
\&    # All the complexities of CGI, FastCGI and HTTP get reduced to a
\&    # single method call!
\&    sub handler {
\&        my ($self, $tx) = @_;
\&
\&        # Request
\&        my $method = $tx\->req\->method;
\&        my $path   = $tx\->req\->url\->path;
\&
\&        # Response
\&        $tx\->res\->headers\->content_type(\*(Aqtext/plain\*(Aq);
\&        $tx\->res\->body("$method request for $path!");
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Mojo provides a flexible runtime environment for Perl web frameworks.
It is a great basis for implementing your own framework.
.PP
Also included in the distribution is an \s-1MVC\s0 web framework named
Mojolicious, which also supports a simplified single file mode through
Mojolicious::Lite.
.PP
Currently this distribution has no requirements besides Perl 5.8.1.
.SS "The Mojo Stack"
.IX Subsection "The Mojo Stack"
.Vb 12
\&    .\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-.
\&    |                                                            |
\&    |   Application  .\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq
\&    |                | .\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-. .\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-.
\&    |                | |    Mojolicious    | | Mojolicious::Lite |
\&    \*(Aq\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq \*(Aq\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq \*(Aq\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq
\&    .\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-.
\&    |                           Mojo                             |
\&    \*(Aq\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq
\&    .\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-. .\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-. .\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-.
\&    |        CGI       | |      FastCGI     | |     HTTP 1.1     |
\&    \*(Aq\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq \*(Aq\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq \*(Aq\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\*(Aq
.Ve
.PP
For documentation on the included frameworks see Mojolicious::Book and
Mojolicious::Lite.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
Mojo implements the following attributes.
.ie n .SS """build_tx_cb"""
.el .SS "\f(CWbuild_tx_cb\fP"
.IX Subsection "build_tx_cb"
.Vb 2
\&    my $cb = $mojo\->build_tx_cb;
\&    $mojo  = $mojo\->build_tx_cb(sub { ... });
.Ve
.PP
The transaction builder callback, by default it builds a
Mojo::Transaction::Single object.
.ie n .SS """client"""
.el .SS "\f(CWclient\fP"
.IX Subsection "client"
.Vb 2
\&    my $client = $mojo\->client;
\&    $mojo      = $mojo\->client(Mojo::Client\->new);
.Ve
.PP
A full featured \s-1HTTP\s0 1.1 client for use in your applications, by default a
Mojo::Client object.
.ie n .SS """home"""
.el .SS "\f(CWhome\fP"
.IX Subsection "home"
.Vb 2
\&    my $home = $mojo\->home;
\&    $mojo    = $mojo\->home(Mojo::Home\->new);
.Ve
.PP
The home directory of your application, by default a Mojo::Home object
which stringifies to the actual path.
.ie n .SS """log"""
.el .SS "\f(CWlog\fP"
.IX Subsection "log"
.Vb 2
\&    my $log = $mojo\->log;
\&    $mojo   = $mojo\->log(Mojo::Log\->new);
.Ve
.PP
The logging layer of your application, by default a Mojo::Log object.
.SH "METHODS"
.IX Header "METHODS"
Mojo inherits all methods from Mojo::Base and implements the following
new ones.
.ie n .SS """new"""
.el .SS "\f(CWnew\fP"
.IX Subsection "new"
.Vb 1
\&    my $mojo = Mojo\->new;
.Ve
.PP
Construct a new Mojo application.
Will automatically detect your home directory and set up logging to
\&\f(CW\*(C`log/mojo.log\*(C'\fR if there's a log directory.
.ie n .SS """handler"""
.el .SS "\f(CWhandler\fP"
.IX Subsection "handler"
.Vb 1
\&    $tx = $mojo\->handler($tx);
.Ve
.PP
The handler is the main entry point to your application or framework and
will be called for each new transaction.
.PP
.Vb 3
\&    sub handler {
\&        my ($self, $tx) = @_;
\&    }
.Ve
.ie n .SS """start"""
.el .SS "\f(CWstart\fP"
.IX Subsection "start"
.Vb 2
\&    Mojo\->start;
\&    Mojo\->start(\*(Aqdaemon\*(Aq);
.Ve
.PP
Start the Mojo::Commands command line interface for your application.
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Web"
.IX Subsection "Web"
.Vb 1
\&    http://mojolicious.org
.Ve
.SS "\s-1IRC\s0"
.IX Subsection "IRC"
.Vb 1
\&    #mojo on irc.perl.org
.Ve
.SS "Mailing-List"
.IX Subsection "Mailing-List"
.Vb 1
\&    http://lists.kraih.com/listinfo/mojo
.Ve
.SH "DEVELOPMENT"
.IX Header "DEVELOPMENT"
.SS "Repository"
.IX Subsection "Repository"
.Vb 1
\&    http://github.com/kraih/mojo/commits/master
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mojolicious
.SH "AUTHOR"
.IX Header "AUTHOR"
Sebastian Riedel, \f(CW\*(C`sri@cpan.org\*(C'\fR.
.SH "CREDITS"
.IX Header "CREDITS"
In alphabetical order:
.PP
Adam Kennedy
.PP
Adriano Ferreira
.PP
Alexey Likhatskiy
.PP
Anatoly Sharifulin
.PP
Andre Vieth
.PP
Andreas Koenig
.PP
Andy Grundman
.PP
Aristotle Pagaltzis
.PP
Ask Bjoern Hansen
.PP
Audrey Tang
.PP
Breno G. de Oliveira
.PP
Burak Gursoy
.PP
Ch Lamprecht
.PP
Christian Hansen
.PP
David Davis
.PP
Gisle Aas
.PP
Graham Barr
.PP
James Duncan
.PP
Jaroslav Muhin
.PP
Jesse Vincent
.PP
Kazuhiro Shibuya
.PP
Kevin Old
.PP
Lars Balker Rasmussen
.PP
Leon Brocard
.PP
Maik Fischer
.PP
Marcus Ramberg
.PP
Mark Stosberg
.PP
Maksym Komar
.PP
Maxim Vuets
.PP
Mirko Westermeier
.PP
Pascal Gaudette
.PP
Pedro Melo
.PP
Pierre-Yves Ritschard
.PP
Rafal Pocztarski
.PP
Randal Schwartz
.PP
Robert Hicks
.PP
Shu Cho
.PP
Stanis Trendelenburg
.PP
Tatsuhiko Miyagawa
.PP
Uwe Voelker
.PP
Viacheslav Tikhanovskii
.PP
Yuki Kimoto
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2008\-2010, Sebastian Riedel.
.PP
This program is free software, you can redistribute it and/or modify it under
the terms of the Artistic License version 2.0.
